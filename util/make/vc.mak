#==============================================================================
#$RCSfile: vc.mak,v $
#
#   DESC : Microsoft VC++ Tool Definition, Host Compile and Run
#
# AUTHOR : Rick Foos, ECL, LLC
#
#  EEMBC : Technical Advisory Group (TechTAG)
#
#    CVS : $Revision: 1.15 $
#------------------------------------------------------------------------------
# Copyright (c) 1998-2002 by the EDN Embedded Microprocessor 
# Benchmark Consortium (EEMBC), Inc. All Rights Reserved.
#==============================================================================
# For information on Microsoft Visual Studio
#
# http://msdn.microsoft.com/vstudio/

# ARCHITECTURE SECTION
# Any specific options 

# SYSTEM ENVIRONMENT SECTION

# Tools Root Directory
# Assumes vcvars32.bat has been executed. Paths not OS neutral
# $(MSVCDIR) will not work because of backslashes in directories
TOOLS		= C:/PROGRA~1/MICROS~3/VC98
TOOLPATH	= /cygdrive/c/PROGRA~1/MICROS~3

# From VCVARS32.BAT, MODIFIED FOR GCC MAKE ENVIRONMENT
# Root of Visual Developer Studio Common files.
VSCommonDir=$(TOOLPATH)/Common

# Root of Visual Developer Studio installed files.
MSDevDir=$(TOOLPATH)/Common/msdev98

# Root of Visual C++ installed files.
MSVCDir=$(TOOLPATH)/VC98

# VcOsDir is used to help create either a Windows 95 or Windows NT specific path.

ifeq ($(OS),Windows_NT)
VcOsDir=WINNT
else
VcOsDir=WIN95
endif

ifeq ($(OS),Windows_NT)
# Windows NT
PATH +=:$(MSDevDir)/BIN:$(MSVCDir)/BIN:$(VSCommonDir)/TOOLS/$(VcOsDir):$(VSCommonDir)/TOOLS
else
# Windows ME/9x
PATH +=:"$(MSDevDir)/BIN":"$(MSVCDir)/BIN":"$(VSCommonDir)/TOOLS/$(VcOsDir)":"$(VSCommonDir)/TOOLS":"$(windir)/SYSTEM"
endif

# Differs from Path processing on Windows
#INCLUDE +=:$(MSVCDir)/ATL/INCLUDE:$(MSVCDir)/INCLUDE:$(MSVCDir)/MFC/INCLUDE
#LIB +=:$(MSVCDir)/LIB:$(MSVCDir)/MFC/LIB

#set VcOsDir=
#set VSCommonDir=

# Tools Executables, Output File Flag and Output File Types

CC		= $(TOOLS)/bin/cl
OBJOUT = -Fo
OBJ		=.obj

AS		= $(TOOLS)/bin/cl

LD		= $(TOOLS)/bin/cl
EXEOUT	= -o
EXE		= .exe

AR		= $(TOOLS)/bin/lib
LIBTYPE	= .lib
LIBOUT = -OUT:

# COMPILER SECTION

# You may need to override the Environment variable INCLUDE.
# INCLUDE is used by most compilers, and should not 
# be passed to the compiler in the makefile.
#INCLUDE=$(TOOLS)/include

# -c             compile but do not link
# -o             specify the output file name
# -ML		     Link with LIBC.LIB
# -GX			 Enable C++ EH, extern C defaults to nothrow
# -Od			 Disable Optimization
# -O2			 Optimize for Speed

COMPILER_FLAGS = -nologo -ML -GX -O2 -D "WIN32" -D "NDEBUG" -D "_CONSOLE" -D "_MBCS"
COMPILER_DEBUG = -nologo -MLd -Gm -GX -Zi -D "WIN32" -D "_DEBUG" -D "_CONSOLE" 

WARNING_OPTIONS= -W3

# Additional include files not in dependancies or system include.
COMPILER_INCLUDES =

# Optional: Passed to compiler, here or in makefile to override THCFG defines.
#COMPILER_DEFINES = 

# ASSEMBLER SECTION

ASSEMBLER_FLAGS		= 
ASSEMBLER_INCLUDES	=

# LINKER SECTION

LINKER_FLAGS	= 
LINKER_INCLUDES	=

# LIBRARIAN SECTION
LIBRARY_FLAGS	= 

# SIZE SECTION
SIZE			= $(TOOLS)/bin/dumpbin 
SIZE_FLAGS		= -summary
AWKSZ			= $(TOOLCHAIN)
AWKDIR			= awk

# IMAGE SECTION
IMAGE			= 
IM_FLAGS		= 
IMG				= 

# CONTROL SECTION
RUN_FLAGS		= 
RUN				=
ALL_TARGETS		= mkdir targets run results

# Optional specific files for specialized run and results
PLATFORM		= x86

# Optional re-use of dependancy files generated by makerule.pl
TARGETS			= $(TOOLCHAIN)
